node {
  name: "image_tensor"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Preprocessor/mul"
  op: "Mul"
  input: "image_tensor"
  input: "Preprocessor/mul/x"
}
node {
  name: "Preprocessor/sub"
  op: "Sub"
  input: "Preprocessor/mul"
  input: "Preprocessor/sub/y"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  op: "Conv2D"
  input: "Preprocessor/sub"
  input: "FeatureExtractor/MobilenetV1/Conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_0/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_12_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/depthwise_weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_depthwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/Conv2d_13_pointwise/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/projection_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/projection_3/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/nearest_neighbor_upsampling/Reshape_1"
  op: "ResizeNearestNeighbor"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/BiasAdd"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/nearest_neighbor_upsampling/Reshape_1/output_shape"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_2/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/projection_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_2/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_2/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/projection_2/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/add"
  op: "Add"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/nearest_neighbor_upsampling/Reshape_1"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_2/BiasAdd"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/add"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_2/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_2/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_2/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_2/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/nearest_neighbor_upsampling_1/Reshape_1"
  op: "ResizeNearestNeighbor"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/add"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/nearest_neighbor_upsampling_1/Reshape_1/output_shape"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/projection_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_1/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/projection_1/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/add_1"
  op: "Add"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/nearest_neighbor_upsampling_1/Reshape_1"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_1/BiasAdd"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/add_1"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_1/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_1/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_1/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/fpn/smoothing_1/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/BiasAdd"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/BatchNorm/gamma"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/BatchNorm/beta"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/BatchNorm/moving_mean"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/BatchNorm/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/BatchNorm/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_1"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_1"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_2"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_3"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_3"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_2/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/smoothing_1/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_15/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/bottom_up_Conv2d_14/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/fpn/top_down/projection_3/BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_4"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_4"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_5"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_5"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_0/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_0/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_0/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_0/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6_7"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6_7"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_0/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_0/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_1/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_1"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_1/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_1"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_2/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_2"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_2/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_3/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_3"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictionTower/conv2d_3/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_3"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_0/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_4"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_0/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_4"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_1/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_5"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_1/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_5"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_2/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_2/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_3/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_1/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_1/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_1/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_1/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6_7"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictionTower/conv2d_3/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6_7"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_0/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_0/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_1/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_1"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_1/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_1"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_2/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_2"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_2/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_3/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_3"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictionTower/conv2d_3/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_3"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_0/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_4"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_0/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_4"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_1/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_5"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_1/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_5"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_2/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_2/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_3/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_2/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_2/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_2/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_2/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6_7"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictionTower/conv2d_3/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6_7"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_0/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_0/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_1/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_1"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_1/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_1"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_2/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_2"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_2/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_3/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_3"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictionTower/conv2d_3/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_3"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_0/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_4"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_0/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_4"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_1/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_5"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_1/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_5"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_2/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_2/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_3/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_3/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_3/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_3/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_3/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6_7"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictionTower/conv2d_3/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6_7"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_0/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_0/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_0/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_1/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_1/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_1"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_1/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_1"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_2/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_2/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_2"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_2/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_3/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictionTower/conv2d_3/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_3"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictionTower/conv2d_3/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_3"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_0/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_0/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_4"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_0/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_1/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_4"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_1/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_1/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_1/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_5"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_1/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_5"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_2/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_2/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_2/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_2/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_3/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_3/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_4/gamma"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_4/beta"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_4/moving_mean"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictionTower/conv2d_3/BatchNorm/feature_4/moving_variance"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6_7"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictionTower/conv2d_3/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6_7"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "concat/axis_flatten"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        int_val: -1
        tensor_shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd"
}
node {
  name: "ClassPredictor/concat"
  op: "ConcatV2"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd/Flatten"
  input: "concat/axis_flatten"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd"
}
node {
  name: "BoxPredictor/concat"
  op: "ConcatV2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd/Flatten"
  input: "concat/axis_flatten"
}
node {
  name: "PriorBox_0"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/Conv2D"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 32.0
        float_val: 45.254833995939045
        float_val: 22.62741699796952
        float_val: 32.0
        float_val: 45.25483399593904
        float_val: 64.0
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 32.0
        float_val: 45.254833995939045
        float_val: 45.254833995939045
        float_val: 64.00000000000001
        float_val: 22.627416997969522
        float_val: 32.00000000000001
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_1"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 64.0
        float_val: 90.50966799187809
        float_val: 45.25483399593904
        float_val: 64.0
        float_val: 90.50966799187808
        float_val: 128.0
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 64.0
        float_val: 90.50966799187809
        float_val: 90.50966799187809
        float_val: 128.00000000000003
        float_val: 45.254833995939045
        float_val: 64.00000000000001
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_2"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 128.0
        float_val: 181.01933598375618
        float_val: 90.50966799187808
        float_val: 128.0
        float_val: 181.01933598375615
        float_val: 256.0
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 128.0
        float_val: 181.01933598375618
        float_val: 181.01933598375618
        float_val: 256.00000000000006
        float_val: 90.50966799187809
        float_val: 128.00000000000003
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_3"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 256.0
        float_val: 362.03867196751236
        float_val: 181.01933598375615
        float_val: 256.0
        float_val: 362.0386719675123
        float_val: 512.0
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 256.0
        float_val: 362.03867196751236
        float_val: 362.03867196751236
        float_val: 512.0000000000001
        float_val: 181.01933598375618
        float_val: 256.00000000000006
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_4"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 512.0
        float_val: 724.0773439350247
        float_val: 362.0386719675123
        float_val: 512.0
        float_val: 724.0773439350246
        float_val: 1024.0
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 512.0
        float_val: 724.0773439350247
        float_val: 724.0773439350247
        float_val: 1024.0000000000002
        float_val: 362.03867196751236
        float_val: 512.0000000000001
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox/concat"
  op: "ConcatV2"
  input: "PriorBox_0"
  input: "PriorBox_1"
  input: "PriorBox_2"
  input: "PriorBox_3"
  input: "PriorBox_4"
  input: "concat/axis_flatten"
}
node {
  name: "ClassPredictor/concat/sigmoid"
  op: "Sigmoid"
  input: "ClassPredictor/concat"
}
node {
  name: "detection_out"
  op: "DetectionOutput"
  input: "BoxPredictor/concat"
  input: "ClassPredictor/concat/sigmoid"
  input: "PriorBox/concat"
  attr {
    key: "background_label_id"
    value {
      i: 0
    }
  }
  attr {
    key: "code_type"
    value {
      s: "CENTER_SIZE"
    }
  }
  attr {
    key: "confidence_threshold"
    value {
      f: 0.01
    }
  }
  attr {
    key: "keep_top_k"
    value {
      i: 100
    }
  }
  attr {
    key: "nms_threshold"
    value {
      f: 0.6
    }
  }
  attr {
    key: "num_classes"
    value {
      i: 2
    }
  }
  attr {
    key: "share_location"
    value {
      b: true
    }
  }
  attr {
    key: "top_k"
    value {
      i: 100
    }
  }
}
